# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on: push
  # Triggers the workflow on push or pull request events but only for the master branch
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.6
        with:
          version: 1.1.6
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Poetry Install
        run: poetry install

      - name: .venv activate
        run: source $VENV

      - name: Linters
        run: make lint

      - name: Run a multi-line script
        run: |
          make ctest
          echo 11111

venv-Linux-f1419afebd53902237fd286ce7b55873f186ceea5bd7df626c205d8742676456
venv-Linux-f1419afebd53902237fd286ce7b55873f186ceea5bd7df626c205d8742676456